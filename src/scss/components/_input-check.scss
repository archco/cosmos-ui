%custom-label {
  margin: 0;
  font-weight: normal;
  color: inherit;
  vertical-align: middle;
}

%input-toggle {
  $_size: $input-switch-base-size;

  .input-box {
    position: relative;
    width: $_size * 1.6;
    background-color: $input-toggle-bg-color;
    border: 1px solid $input-toggle-border-color;
    border-radius: $_size;
    @include transition(background-color $input-toggle-transition-duration ease-in);

    &::before {
      position: absolute;
      top: -1px;
      left: -1px;
      width: $_size;
      height: $_size;
      background-color: $input-toggle-bg-color;
      border: 1px solid $input-toggle-border-color;
      border-radius: 50%;
      content: '';
      @include transition(transform $input-toggle-transition-duration ease-out);
    }

    svg,
    .input-box-circle {
      display: none;
    }
  }

  input:checked ~ .input-box {
    background-color: $input-toggle-active-color;

    &::before {
      transform: translateX(.6em);
    }
  }
}

.input-check {
  @extend %custom-label;

  &.toggle {
    @extend %input-toggle;
  }

  input[type="checkbox"] {
    position: absolute;
    opacity: 0;

    // scss-lint:disable SelectorDepth
    &:checked ~ .input-box > svg > polyline {
      opacity: 1;
      stroke-dashoffset: 0;
    }

    &:focus ~ .input-box,
    &:active ~ .input-box {
      box-shadow: 0 0 0 $input-switch-border-width $input-switch-focus-color;
    }
  }

  .input-box {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: $input-switch-base-size;
    height: $input-switch-base-size;
    padding: 0;
    margin: 0;
    overflow: hidden;
    vertical-align: middle;
    background: $input-switch-fill-color;
    border: $input-switch-border-width solid $input-switch-border-color;
    @include border-radius(percentage(1 / 8));
    box-sizing: content-box;
    user-select: none;

    > svg {
      width: 100%;
      height: 100%;

      // scss-lint:disable SelectorDepth, NestingDepth
      > polyline {
        opacity: 0;
        @include transition(stroke-dashoffset .15s ease-in-out);
        stroke: $input-switch-stroke-color;
        stroke-width: 2px;
        stroke-dashoffset: 20;
        stroke-dasharray: 20;
      }
    }
  }
}
